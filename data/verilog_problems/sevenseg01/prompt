SystemVerilog makes it easy to compare and assign whole vectors, which dramatically simplifies the work necessary to specify combinational logic.

For example, if `value` is a 4-bit vector, we could compare it with a constant:
<pre>
    value == 4'b1101
</pre>

Similarly, if `output` is an 8-bit vector, we could set all the bits at once with
<pre>
    assign output = 8'b0001111
</pre>

Multi-bit numbers (called "literals" in programming-speak) are specified using the following syntax:

<pre>
    WIDTH ' BASE VALUE
</pre>

Where `WIDTH` is the number of bits in the number, and `BASE` is `b` for binary or `h` for hexadecimal.  It's also possible to use `d` for decimal, but since decimal is the default, it's more common to just leave out the width and base for decimal constants entirely.

Complete the architecture below to display the value of S using the digits 0 and 1 on a 7-segment display.  The output should be a vector of bits corresponding to the LED segments, in the order "abcdefg".  Put the 1 on the right side of the display (using segments b and c).

<img src="/static/images/sevenseg_labels.svg" />

